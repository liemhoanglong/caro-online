[{"E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-online\\src\\index.js":"1","E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-online\\src\\App.js":"2","E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-online\\src\\Components\\User\\register.js":"3","E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-online\\src\\Components\\User\\login.js":"4","E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-online\\src\\Components\\Main\\index.js":"5","E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-online\\src\\Components\\User\\Service\\authService.js":"6","E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-online\\src\\Util\\callAPI.js":"7","E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-online\\src\\Util\\userAPI.js":"8","E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-online\\src\\Components\\ListUser\\index.js":"9","E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-online\\src\\Components\\Lobby\\Main\\index.js":"10","E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-online\\src\\Components\\Game\\index.js":"11","E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-online\\src\\Components\\Game\\board.js":"12","E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-online\\src\\Components\\Game\\square.js":"13","E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-online\\src\\Components\\Lobby\\Main\\searchRoom.js":"14","E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-online\\src\\Components\\Main\\navigationBar.js":"15","E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-online\\src\\Components\\User\\UserContext.js":"16","E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-online\\src\\Components\\ListUser\\listuserTesting2.js":"17"},{"size":449,"mtime":1607131439595,"results":"18","hashOfConfig":"19"},{"size":1226,"mtime":1608110573869,"results":"20","hashOfConfig":"19"},{"size":11534,"mtime":1607444475800,"results":"21","hashOfConfig":"19"},{"size":5769,"mtime":1608047492450,"results":"22","hashOfConfig":"19"},{"size":5124,"mtime":1608110527443,"results":"23","hashOfConfig":"19"},{"size":992,"mtime":1608002054227,"results":"24","hashOfConfig":"19"},{"size":412,"mtime":1608002054229,"results":"25","hashOfConfig":"19"},{"size":243,"mtime":1608002054243,"results":"26","hashOfConfig":"19"},{"size":1818,"mtime":1608026671248,"results":"27","hashOfConfig":"19"},{"size":5133,"mtime":1608109165063,"results":"28","hashOfConfig":"19"},{"size":8477,"mtime":1608027967992,"results":"29","hashOfConfig":"19"},{"size":917,"mtime":1608027967920,"results":"30","hashOfConfig":"19"},{"size":295,"mtime":1608027968011,"results":"31","hashOfConfig":"19"},{"size":1451,"mtime":1608005017014,"results":"32","hashOfConfig":"19"},{"size":5027,"mtime":1608050516812,"results":"33","hashOfConfig":"19"},{"size":1322,"mtime":1608050516672,"results":"34","hashOfConfig":"19"},{"size":3013,"mtime":1608123160736,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"z4ehbr",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-online\\src\\index.js",[],["76","77"],"E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-online\\src\\App.js",[],"E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-online\\src\\Components\\User\\register.js",["78"],"import React, {useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {Redirect, Link} from \"react-router-dom\";\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport {signUpService} from \"./Service/authService\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(1),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(1, 0, 2),\r\n        color: \"#fff\"\r\n    },\r\n    input: {\r\n        fontSize: \"15px\"\r\n    },\r\n    labelInput:{\r\n        fontSize: \"15px\"\r\n    }\r\n}));\r\n\r\n\r\nexport default function Register() {\r\n    const [information, setInformation] = useState({\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            username: \"\",\r\n            password: \"\",\r\n            rePassword: \"\",\r\n        }\r\n    )\r\n    const [status, setStatus] = useState({type: \"error\", content: \"\"});\r\n    const [alert, setAlert] = useState(false);\r\n    const [isSignUpSuccess, setIsSignUpSuccess] = useState(false);\r\n    const classes = useStyles();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if(information.email.length === 0 || information.lastName.length === 0 || information.firstName.length === 0 ||\r\n            information.password.length === 0 || information.rePassword.length === 0)\r\n        {\r\n            setStatus({type: \"error\", content: \"Please fill all fields\"})\r\n            setAlert(true);\r\n        }else if(information.password !== information.rePassword)\r\n        {\r\n            setStatus({type: \"error\", content: \"Password not match\"})\r\n            setAlert(true);\r\n        }\r\n        else if(information.password.length < 6)\r\n        {\r\n            setStatus({type: \"error\", content: \"Password at least 6 characters\"})\r\n            setAlert(true);\r\n        }\r\n        else {\r\n            const res = await signUpService(information.username, information.firstName,information.lastName,\r\n                information.password, information.email)\r\n            if(res.data.err)\r\n            {\r\n                setStatus({type: \"error\", content: res.data.err});\r\n                setAlert(true);\r\n            }else if (res.data.msg)\r\n            {\r\n                setStatus({type: \"success\", content: res.data.msg});\r\n                setAlert(true);\r\n                //direct\r\n                //setIsSignUpSuccess(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    if(isSignUpSuccess) return (<Redirect to=\"/login\"/>)\r\n\r\n    return (\r\n        <div>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Register\r\n                    </Typography>\r\n                    <Collapse in={alert}>\r\n                        <Alert severity={status.type}\r\n                               action={\r\n                                   <IconButton\r\n                                       aria-label=\"close\"\r\n                                       color=\"inherit\"\r\n                                       size=\"small\"\r\n                                       onClick={() => {\r\n                                           setAlert(false);\r\n                                       }}\r\n                                   >\r\n                                       <CloseIcon fontSize=\"inherit\" />\r\n                                   </IconButton>\r\n                               }\r\n                        >\r\n                            {status.content}\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    autoComplete=\"fname\"\r\n                                    name=\"firstName\"\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"firstName\"\r\n                                    label=\"First Name\"\r\n                                    autoFocus\r\n                                    InputProps={{\r\n                                        className: classes.input\r\n                                    }}\r\n                                    InputLabelProps={{\r\n                                        className: classes.labelInput\r\n                                    }}\r\n                                    onChange = {(e) => setInformation({...information, firstName: e.target.value})}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"lastName\"\r\n                                    label=\"Last Name\"\r\n                                    name=\"lastName\"\r\n                                    autoComplete=\"lname\"\r\n                                    InputProps={{\r\n                                        className: classes.input\r\n                                    }}\r\n                                    InputLabelProps={{\r\n                                        className: classes.labelInput\r\n                                    }}\r\n                                    onChange = {(e) => setInformation({...information, lastName: e.target.value})}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"username\"\r\n                                    label=\"Username\"\r\n                                    name=\"username\"\r\n                                    InputProps={{\r\n                                        className: classes.input\r\n                                    }}\r\n                                    InputLabelProps={{\r\n                                        className: classes.labelInput\r\n                                    }}\r\n                                    onChange = {(e) => setInformation({...information, username: e.target.value})}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"email\"\r\n                                    label=\"Email Address\"\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                    InputProps={{\r\n                                        className: classes.input\r\n                                    }}\r\n                                    InputLabelProps={{\r\n                                        className: classes.labelInput\r\n                                    }}\r\n                                    onChange = {(e) => setInformation({...information, email: e.target.value})}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                    InputProps={{\r\n                                        className: classes.input\r\n                                    }}\r\n                                    InputLabelProps={{\r\n                                        className: classes.labelInput\r\n                                    }}\r\n                                    onChange = {(e) => setInformation({...information, password: e.target.value})}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"re-password\"\r\n                                    label=\"Re-Password\"\r\n                                    type=\"password\"\r\n                                    id=\"re-password\"\r\n                                    InputProps={{\r\n                                        className: classes.input\r\n                                    }}\r\n                                    InputLabelProps={{\r\n                                        className: classes.labelInput\r\n                                    }}\r\n                                    onChange = {(e) => setInformation({...information, rePassword: e.target.value})}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            Sign Up\r\n                        </Button>\r\n                        <Grid container justify=\"flex-end\">\r\n                            <Grid item>\r\n                                <Link to='/login' variant=\"body2\">\r\n                                    Already have an account? Login\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n\r\n    );\r\n}","E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-online\\src\\Components\\User\\login.js",[],"E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-online\\src\\Components\\Main\\index.js",[],"E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-online\\src\\Components\\User\\Service\\authService.js",[],"E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-online\\src\\Util\\callAPI.js",[],"E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-online\\src\\Util\\userAPI.js",[],"E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-online\\src\\Components\\ListUser\\index.js",["79","80"],"import React from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container, List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        backgroundColor: '#E9ECEF',\r\n        maxHeight: 300,\r\n    },\r\n}));\r\n\r\nexport default function ListUser(props) {\r\n    console.log(props.listUserNow)\r\n    const userOnline = props.listUserNow.reduce((a, o) => (a.push(o.userID), a), [])\r\n    console.log(userOnline)\r\n    // const userOnline = [1,2,3];\r\n    // const listUser = [10, 11, 12];\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container>\r\n            <List className={classes.root} component=\"nav\" aria-label=\"main mailbox folders\">\r\n                {props.listUser.map((user, i) => { // props.listUser.map ....\r\n                    return (\r\n                        <ListItem key={i} button style={{ borderRadius: \"10px\" }}>\r\n                            { userOnline.includes(user.id) ?\r\n                                <ListItemIcon>\r\n                                    <FiberManualRecordIcon style={{ fill: \"green\" }} />\r\n                                </ListItemIcon>\r\n                                :\r\n\r\n                                <ListItemIcon>\r\n                                    <FiberManualRecordIcon />\r\n                                </ListItemIcon>\r\n                            }\r\n                            <ListItemText primary={user.name} />\r\n                        </ListItem>\r\n                    )\r\n                })\r\n                }\r\n            </List>\r\n        </Container>\r\n    );\r\n}","E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-online\\src\\Components\\Lobby\\Main\\index.js",["81"],"import React from 'react';\r\nimport { withStyles, Theme, createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {Grid, Avatar} from \"@material-ui/core\";\r\nimport SearchRoom from \"./searchRoom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ListUser from \"../../ListUser\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles(() =>\r\n    createStyles({\r\n        table: {\r\n            minWidth: 500,\r\n        }\r\n    })\r\n);\r\n\r\nconst StyledTableCell = withStyles((theme: Theme) =>\r\n    createStyles({\r\n        head: {\r\n            backgroundColor: theme.palette.common.black,\r\n            color: theme.palette.common.white,\r\n        },\r\n        body: {\r\n            fontSize: 14,\r\n        },\r\n    }),\r\n)(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            '&:nth-of-type(odd)': {\r\n                backgroundColor: theme.palette.action.hover,\r\n            },\r\n        },\r\n    }),\r\n)(TableRow);\r\n\r\nfunction createData(ID: string, name: string, numberOfUser: number) {\r\n    return { ID, name, numberOfUser};\r\n}\r\n\r\nconst rows = [\r\n    createData('R001', \"Phòng 1\", 1),\r\n    createData('R002', \"Phòng 2\", 1),\r\n    createData('R003', \"Phòng 3\", 2),\r\n];\r\n\r\nconst table = (classes) =>\r\n{\r\n    return(\r\n        <React.Fragment>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell>ID phòng</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Tên</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Số lượng</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Chơi ngay</StyledTableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map((row) => (\r\n                            <StyledTableRow key={row.ID}>\r\n                                <StyledTableCell component=\"th\" scope=\"row\">\r\n                                    {row.ID}\r\n                                </StyledTableCell>\r\n                                <StyledTableCell align=\"right\">{row.name}</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">{row.numberOfUser}</StyledTableCell>\r\n                                {row.numberOfUser === 1 ?\r\n                                    <StyledTableCell align=\"right\">\r\n                                        <Button variant=\"contained\" color=\"primary\" disableElevation>\r\n                                            Play\r\n                                        </Button>\r\n                                    </StyledTableCell>\r\n                                    :\r\n                                    <StyledTableCell align=\"right\">\r\n                                        <Button variant=\"contained\" color=\"primary\" disableElevation disabled>\r\n                                            Play\r\n                                        </Button>\r\n                                    </StyledTableCell>\r\n                                }\r\n                            </StyledTableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default function Lobby() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid container item alignContent=\"flex-end\" justify=\"flex-end\" style={{margin: 5}}>\r\n                <SearchRoom/>\r\n                <Button variant=\"contained\" color=\"primary\" disableElevation>\r\n                    Chơi ngay\r\n                </Button>\r\n                <Button variant=\"contained\" color=\"primary\" disableElevation>\r\n                    Tạo phòng\r\n                </Button>\r\n            </Grid>\r\n            <Grid container item  style={{margin: 5}}>\r\n                <Grid item xs={9}>\r\n                    {table(classes)}\r\n                </Grid>\r\n                <Grid direction=\"row\" alignContent=\"center\" container item xs = {3} >\r\n                    <Grid item xs={12}>\r\n                        <Avatar style={{width: 200, height: 200, fontSize: 100}}>H</Avatar>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Typography>Điểm: 1609</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Typography>Người chơi đang online</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n\r\n    );\r\n}\r\n","E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-online\\src\\Components\\Game\\index.js",["82","83","84","85"],"import React, { useState } from 'react';\r\nimport { Grid, GridList, Card, CardActions, CardActionArea, Button, CardMedia } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport './game.css';\r\nimport Board from './board'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 345,\r\n    },\r\n});\r\n\r\n\r\nconst config = 15\r\n\r\nconst Game = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const [size, setSize] = useState(config);\r\n    const [history, setHistory] = useState([{ squares: Array(size * size).fill(null), }])\r\n    const [stepNumber, setStepNumber] = useState(0)\r\n    const [xIsNext, setXIsNext] = useState(true)\r\n    const [isDes, setIsDes] = useState(true)\r\n\r\n    const handleClick = (i) => {\r\n        const history2 = history.slice(0, stepNumber + 1);\r\n        const current = history2[history2.length - 1]\r\n        const squares = current.squares.slice()\r\n        if (calculateWinner1(squares, current.location) || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = xIsNext ? 'X' : 'O';\r\n        setHistory(history2.concat([{\r\n            squares: squares,\r\n            location: i\r\n        }]))\r\n        setStepNumber(history2.length)\r\n        setXIsNext(!xIsNext)\r\n        setIsDes(true)\r\n    }\r\n\r\n    const sortHistory = () => {\r\n        setIsDes(!isDes)\r\n    }\r\n\r\n    const jumpTo = (step) => {\r\n        setStepNumber(step)\r\n        setXIsNext((step % 2 === 0))\r\n    }\r\n\r\n    const loca = (move) => {\r\n        let r = Math.floor((move) / size) + 1\r\n        let c = Math.floor((move) % size) + 1\r\n        return ': row ' + r + ' col ' + c\r\n    }\r\n\r\n    const current = history[stepNumber];\r\n    const winner = calculateWinner1(current.squares, current.location);\r\n    const moves = history.map((step, move) => {\r\n        // console.log(history[move].location)\r\n        const desc = move ?\r\n            'Go to move #' + move + loca(history[move].location) :\r\n            'Go to game start';\r\n        return (\r\n            <li key={move}>\r\n                {/* <button onClick={() => jumpTo(move)}> */}\r\n                <button style={{ width: \"110%\" }}>\r\n                    {move === stepNumber ? <b>{desc}</b> : desc}\r\n                </button>\r\n            </li>\r\n        );\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n        status = 'Winner: ' + winner.square;\r\n    } else if (!current.squares.includes(null)) {\r\n        status = \"Draw\";\r\n    } else {\r\n        status = 'Next player: ' + (xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n    return (\r\n        <div className=\"game\">\r\n            <Grid item xs={3}>\r\n                <Grid item xs={12}>\r\n                    <Card className={classes.root}>\r\n                        <CardActionArea style={{ textAlign: \"center\" }}>\r\n                            <h1>Bạn</h1>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"player 1\"\r\n                                height=\"200\"\r\n                                src=\"https://gamek.mediacdn.vn/133514250583805952/2020/3/7/anh-1-1583592253266481895600.jpg\"\r\n                                title=\"player 1\"\r\n                            />\r\n                            <h2>Naruto</h2>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n                <br />\r\n                <Grid item xs={12}>\r\n                    <Card className={classes.root}>\r\n                        <CardActionArea style={{ textAlign: \"center\" }}>\r\n                            <h1>Đối thủ</h1>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"player 2\"\r\n                                height=\"200\"\r\n                                src=\"https://tophinhanhdep.com/wp-content/uploads/2020/03/hinh-nen-bell-mere-hai-tac-mu-rom-em-gai-nuoi-1024x576.jpg\"\r\n                                title=\"player 2\"\r\n                            />\r\n                            <h2>Nami</h2>\r\n                        </CardActionArea>\r\n                        <CardActions style={{ textAlign: \"center\" }}>\r\n                            <Button variant=\"contained\" color=\"secondary\">\r\n                                Xin hòa\r\n                                </Button>\r\n                            <Button variant=\"contained\" color=\"primary\">\r\n                                Đầu hàng\r\n                            </Button>\r\n                        </CardActions>\r\n                    </Card>\r\n                </Grid>\r\n\r\n                {/* <form className=\"input-size\">\r\n                    <label htmlFor=\"size\">Board size: </label>\r\n                    <input type=\"number\" id=\"size\" name=\"size\" onChange={(event) => setSize(event.target.value)} />\r\n                </form> */}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <div className=\"game-board\">\r\n                    <Board\r\n                        winningSquares={winner ? winner.line : []}\r\n                        squares={current.squares}\r\n                        onClick={i => handleClick(i)}\r\n                        size={size}\r\n                    />\r\n                </div>\r\n            </Grid>\r\n            <Grid xs={3}>\r\n                <Grid xs={12} className=\"game-info\">\r\n                    <h1>Lịch sử bước đi</h1>\r\n                    <div className=\"game-status\">{status}</div>\r\n                    <div>\r\n                        Sort by: {isDes ? \"Asending\" : \"Descending\"}\r\n                    </div>\r\n                    <label className=\"switch\">\r\n                        <input type=\"checkbox\" onClick={() => sortHistory()} />\r\n                        <span className=\"slider round\"></span>\r\n                    </label>\r\n                    <GridList cellHeight={160}>\r\n                        <ol>{isDes ? moves.reverse() : moves}</ol>\r\n                    </GridList>\r\n                </Grid>\r\n                <Grid xs={12}>\r\n                    <GridList cellHeight={160}>\r\n                        <h3>hello</h3>\r\n                    </GridList>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\n// ========================================\r\n\r\nconst location = (move, size) => {\r\n    let r = Math.floor((move) / size) + 1\r\n    let c = Math.floor((move) % size) + 1\r\n    return [r, c]\r\n}\r\n\r\n//Declaring a Winner\r\nfunction calculateWinner(squares, size) {\r\n    // console.log(squares)\r\n\r\n    if (size <= 3) {\r\n        const lines = [\r\n            [0, 1, 2],\r\n            [3, 4, 5],\r\n            [6, 7, 8],\r\n            [0, 3, 6],\r\n            [1, 4, 7],\r\n            [2, 5, 8],\r\n            [0, 4, 8],\r\n            [2, 4, 6],\r\n        ];\r\n        for (let i = 0; i < lines.length; i++) {\r\n            const [a, b, c] = lines[i];\r\n            if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n                return { player: squares[a], line: [a, b, c] };\r\n            }\r\n        }\r\n    } else {\r\n\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction calculateWinner1(squares, indexNow) {\r\n    const size = config;\r\n    const di = [0, 0, 1, -1, -1, 1, -1, 1];\r\n    const dj = [1, -1, 0, 0, -1, 1, 1, -1];\r\n\r\n    let i = Math.floor(indexNow / size);\r\n    let j = indexNow % size;\r\n\r\n    for (let k = 0; k < di.length; k += 2) {\r\n        let log = [];\r\n        console.log(log)\r\n        let tempI = i, tempJ = j;\r\n        let tempIndex = tempI * size + tempJ;\r\n        let count1 = 0;\r\n        while (tempI >= 0 && tempI <= size - 1 && tempJ >= 0 && tempJ <= size - 1 && squares[tempIndex] === squares[indexNow]) {\r\n            log.push(tempIndex);\r\n            count1++;\r\n            tempI = tempI + di[k];\r\n            tempJ = tempJ + dj[k];\r\n            tempIndex = tempI * size + tempJ;\r\n        }\r\n        tempI = i;\r\n        tempJ = j;\r\n        tempIndex = tempI * size + tempJ;\r\n        let count2 = 0;\r\n        while (tempI >= 0 && tempI <= size - 1 && tempJ >= 0 && tempJ <= size - 1 && squares[tempIndex] === squares[indexNow]) {\r\n            log.push(tempIndex);\r\n            count2++;\r\n            tempI = tempI + di[k + 1];\r\n            tempJ = tempJ + dj[k + 1];\r\n            tempIndex = tempI * size + tempJ;\r\n        }\r\n        if (count1 + count2 - 1 === 5) {\r\n            const winner = {\r\n                square: squares[indexNow],\r\n                line: log\r\n            }\r\n            return winner;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default Game;\r\n","E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-online\\src\\Components\\Game\\board.js",[],"E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-online\\src\\Components\\Game\\square.js",[],"E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-online\\src\\Components\\Lobby\\Main\\searchRoom.js",["86","87","88"],"import React from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            padding: '2px 4px',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            maxWidth: 200,\r\n        },\r\n        input: {\r\n            marginLeft: theme.spacing(1),\r\n            flex: 1,\r\n        },\r\n        iconButton: {\r\n            padding: 10,\r\n        },\r\n        divider: {\r\n            height: 28,\r\n            margin: 4,\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function SearchRoom() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper component=\"form\" className={classes.root}>\r\n            <InputBase\r\n                className={classes.input}\r\n                placeholder=\"Tìm bàn\"\r\n                inputProps={{ 'aria-label': 'Search Room' }}\r\n            />\r\n            <IconButton className={classes.iconButton} aria-label=\"search\">\r\n                <SearchIcon />\r\n            </IconButton>\r\n        </Paper>\r\n    );\r\n}\r\n","E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-online\\src\\Components\\Main\\navigationBar.js",[],"E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-online\\src\\Components\\User\\UserContext.js",[],"E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-online\\src\\Components\\ListUser\\listuserTesting2.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":59,"column":29,"nodeType":"95","messageId":"96","endLine":59,"endColumn":47},{"ruleId":"93","severity":1,"message":"97","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":14},{"ruleId":"98","severity":1,"message":"99","line":18,"column":76,"nodeType":"100","messageId":"101","endLine":18,"endColumn":77},{"ruleId":"93","severity":1,"message":"102","line":13,"column":8,"nodeType":"95","messageId":"96","endLine":13,"endColumn":16},{"ruleId":"93","severity":1,"message":"103","line":20,"column":18,"nodeType":"95","messageId":"96","endLine":20,"endColumn":25},{"ruleId":"93","severity":1,"message":"104","line":47,"column":11,"nodeType":"95","messageId":"96","endLine":47,"endColumn":17},{"ruleId":"93","severity":1,"message":"105","line":169,"column":7,"nodeType":"95","messageId":"96","endLine":169,"endColumn":15},{"ruleId":"93","severity":1,"message":"106","line":176,"column":10,"nodeType":"95","messageId":"96","endLine":176,"endColumn":25},{"ruleId":"93","severity":1,"message":"107","line":5,"column":8,"nodeType":"95","messageId":"96","endLine":5,"endColumn":15},{"ruleId":"93","severity":1,"message":"108","line":7,"column":8,"nodeType":"95","messageId":"96","endLine":7,"endColumn":16},{"ruleId":"93","severity":1,"message":"109","line":9,"column":8,"nodeType":"95","messageId":"96","endLine":9,"endColumn":22},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'setIsSignUpSuccess' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'ListUser' is defined but never used.","'setSize' is assigned a value but never used.","'jumpTo' is assigned a value but never used.","'location' is assigned a value but never used.","'calculateWinner' is defined but never used.","'Divider' is defined but never used.","'MenuIcon' is defined but never used.","'DirectionsIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]